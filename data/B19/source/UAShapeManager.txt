//------------------------------------------------------------------------------//  UAShapeManager.swift//------------------------------------------------------------------------------import Cocoaclass UAShapeManager: NSObject {    //プロパティ    var count: Int = 0;    var itemList: Array<UAShapeItem>    //オブジェクトリスト    var selectedItem: UAShapeItem       //選択中のオブジェクト    var unavailableItem: UAShapeItem    //非選択中オブジェクト    var frameOfShape: CGRect            //図形を描画するビューのサイズ（親ビューのサイズと同じ）    //イニシャライザ    override init() {        itemList = Array.init()        frameOfShape = CGRect(x:0, y:0, width:0, height:0)        //非Optionalにしたのでオブジェクトを初期化する必要がある。そのため使用することのないインスタンスを作成し代入する        unavailableItem = UAShapeItem.init(frame:frameOfShape, point:CGPoint(x:0, y:0))        selectedItem = unavailableItem    }    //オブジェクトの作成    func createStart(_ fromPoint: CGPoint){        selectedItem.selectOff()       //選択中のオブジェクトの選択を解除する        selectedItem = UAShapeItem.init(frame: frameOfShape, point:fromPoint) //ShapeItemオブジェクトの作成        count += 1        selectedItem.coment = String(format:"created %ld", count)        itemList.append(selectedItem)  //自身のリストに追加する    }    //図形描画のドラッグ中    func createGoing(_ toPoint: CGPoint){        selectedItem.shapeCreating(point: toPoint)        selectedItem.needsDisplay = true    }    //図形描画のドラッグ終了    func createStop(_ toPoint: CGPoint){                if selectedItem.nearToPoint(toPoint){            selectedItem.removeFromSuperview()            selectedItem = unavailableItem  //開始と終了ポイントが同じとき図形を作らない        }else{            selectedItem.shapeCreated(toPoint: toPoint)        }        for item in itemList{            print(item.coment)        }    }    //ドラッグの開始    func start(_ fromPoint: CGPoint){        selectedItem.transformKind = 0        if selectedItem.inTheArea(fromPoint){            //開始ポイントが選択された図形の上にある            selectedItem.startTransform(fromPoint)        }    }    //ドラッグ中    func going(_ toPoint: CGPoint){        if selectedItem.transformKind != 0{            //図形の移動・拡大・縮小中            selectedItem.updateTransform(toPoint)        }    }    //ドラッグの終了    func stop(_ toPoint: CGPoint){        if selectedItem.transformKind != 0 &&        !NSEqualPoints(selectedItem.fromPoint, toPoint){ //カーソルの移動があるとき            //図形の移動・拡大・縮小の完了            selectedItem.performTransform(toPoint)        }else{        //図形の選択を外す            selectedItem.selectOff()            selectedItem = unavailableItem            //終了ポイントに図形があれば選択中にする            //let count:Int = itemList.count            for i in stride(from: itemList.count-1, to: -1, by: -1){ //ちょいと分かりづらい                if !itemList[i].unUsed && itemList[i].inTheArea(toPoint){                    selectedItem = itemList[i];       //選択中オブジェクトにする                    selectedItem.selectOn()                    return;                }            }        }    }}