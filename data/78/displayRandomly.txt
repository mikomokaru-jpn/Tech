-(void)displayRandomly{    //イメージの分割    NSInteger count = 0;    //イメージ分割マトリックスを順番に処理する    for (int i=0; i < yNum; i++){        for (int j=0; j < xNum; j++,count++){            if (continuation && matrix[i][j].seq == count){                //適正な位置にイメージがあるときはスキップ（２回目以降の処理）                continue;            }            //分割イメージの代入            int seq = 0;            while(1){                //分割イメージの順序番号を乱数から取得する                seq = myRandom(xNum * yNum);                if ([self canUseImage:seq])                {   //イメージを未使用の場合                    //順序番号をXY座標に変換する                    NSPoint point = [self pointAtseq:seq];                    //イメージの位置と大きさを決定する                    CGRect rect = CGRectMake(point.x*xPartImageLength,                                              point.y*yPartImageLength,                                             xPartImageLength, yPartImageLength);                    <span class='redcolor'>// retainカウントを1減らす</span>                    <span class='redcolor'>CGImageRelease(matrix[i][j].partImage);</span>                    //イメージ分割マトリックスにイメージを分割して設定する                    matrix[i][j].partImage =                         CGImageCreateWithImageInRect(cgNewImage, rect);                    //分割イメージの順序番号を保持する                    matrix[i][j].seq = seq;                    //使用済リストに順序番号を追加する                    [indexList addObject:@(seq)];                    break;  //Whileループを抜ける                }            }        }    }    ... 以下略 ...}