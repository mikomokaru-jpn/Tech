import Cocoa
@NSApplicationMain
class AppDelegate: NSObject, NSApplicationDelegate, NSWindowDelegate {

    @IBOutlet weak var window: NSWindow!
    let view1 = UAView.init(frame: NSMakeRect(100, 50, 200, 100))
    let view2 = UAView.init(frame: NSMakeRect(50, 25, 100, 50))
    var originScreen: NSPoint = NSZeroPoint
    
    //ローカルモニター
    let localMonitor =  NSEvent.addLocalMonitorForEvents(
        matching:[.leftMouseDown],
        handler: { (event: NSEvent?) -> NSEvent? in
            let loc = NSEvent.mouseLocation
            print("-- LocalMonitor --")
            print(String(format:"In screen %.0f:%.0f", loc.x, loc.y))
            if let point = event?.locationInWindow{
                print(String(format:"In window %.0f:%.0f", point.x, point.y))
            }
            return event
        }
    )
    //グローバルモニター
    let globalMonitor = NSEvent.addGlobalMonitorForEvents(
            matching: [.leftMouseDown],
            handler: { (event: NSEvent?) in
                let loc = NSEvent.mouseLocation
                print("-- GlobalMonitor --")
                print(String(format:"%.0f:%.0f", loc.x, loc.y))
        }
    )
    //アプリケーション開始時
    func applicationDidFinishLaunching(_ aNotification: Notification) {
        window.contentView?.wantsLayer = true
        window.contentView?.layer?.backgroundColor = NSColor.lightGray.cgColor
        
        view1.name = "view1"
        view1.wantsLayer = true
        view1.layer?.backgroundColor = NSColor.gray.cgColor
        window.contentView?.addSubview(view1)

        view2.name = "view2"
        view2.wantsLayer = true
        view2.layer?.backgroundColor = NSColor.blue.cgColor
        view1.addSubview(view2)
        self.window.delegate = self
        
        //ローカルモニター
        if let monitor = self.localMonitor{
            NSEvent.removeMonitor(monitor)
        }
    }    
}